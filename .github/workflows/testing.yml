name: Testing

on: [push, pull_request]

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit
      run: |
        pre-commit run -av

  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Lint
      run: |
        nox -e lint

  Formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Code Formatting
      run: |
        nox -e blacken

  Linux:
    runs-on: ubuntu-latest

    timeout-minutes: 20

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python_version:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
        salt_version:
          - 2019.2.0

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox virtualenv

    - name: Set up Testing Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Test
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        nox -e tests-${{ matrix.python_version }} -- -s --log-cli-level=warning --log-file-level=debug --log-file=runtests.log

    - name: Upload Coverage
      shell: bash
      if: always()
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        export CODECOV_FLAGS="ubuntu,py$(echo ${{ matrix.python_version }} | sed -e 's:\.::g')"
        test -f coverage.xml && curl -sL https://codecov.io/bash | bash -s -- -R $(pwd) -s $(pwd) -F "${CODECOV_FLAGS}" -e SALT_REQUIREMENT -n ubuntu-py${{ matrix.python_version }} || true

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: runtests-ubuntu-py${{ matrix.python_version }}-salt-${{ matrix.salt_version }}.log
        path: runtests.log

  Windows:
    runs-on: windows-latest

    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python_version:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
        salt_version:
          - 2019.2.0

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox virtualenv

    - name: Install Windows Dependencies
      #if: startswith('windows', '${{ matrix.os }}')
      run: |
        choco install openssl || true
        choco install curl || true
        choco install vcbuildtools || true
        choco install visualstudio2019buildtools || true

    - name: Set up Testing Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Test
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        nox -e tests-${{ matrix.python_version }} -- -s --log-cli-level=warning --log-file-level=debug --log-file=runtests.log

    - name: Upload Coverage
      shell: bash
      if: always()
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        export CODECOV_FLAGS="windows,py$(echo ${{ matrix.python_version }} | sed -e 's:\.::g')"
        test -f coverage.xml && curl -sL https://codecov.io/bash | bash -s -- -R $(pwd) -s $(pwd) -F "${CODECOV_FLAGS}" -e SALT_REQUIREMENT -n windows-py${{ matrix.python_version }} || true

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: runtests-windows-py${{ matrix.python_version }}-salt-${{ matrix.salt_version }}.log
        path: runtests.log

  macOS:
    runs-on: macOS-latest

    timeout-minutes: 40

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python_version:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
        salt_version:
          - 2019.2.0

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox virtualenv

    - name: Set up Testing Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Test
      env:
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        nox -e tests-${{ matrix.python_version }} -- -s --log-cli-level=warning --log-file-level=debug --log-file=runtests.log

    - name: Upload Coverage
      shell: bash
      if: always()
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        SALT_REQUIREMENT: salt==${{ matrix.salt_version }}
      run: |
        export CODECOV_FLAGS="macos,py$(echo ${{ matrix.python_version }} | sed -e 's:\.::g')"
        test -f coverage.xml && curl -sL https://codecov.io/bash | bash -s -- -R $(pwd) -s $(pwd) -F "${CODECOV_FLAGS}" -e SALT_REQUIREMENT -n macos-py${{ matrix.python_version }} || true

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@master
      with:
        name: runtests-macos-py${{ matrix.python_version }}-salt-${{ matrix.salt_version }}.log
        path: runtests.log
